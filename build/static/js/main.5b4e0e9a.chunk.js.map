{"version":3,"sources":["utils/HighchartDependencies.js","Components/Algotrading/Editor.js","Components/Charts/utils.js","Components/Algotrading/StockSelect.js","Components/Algotrading/Utils.js","Components/Algotrading/SelectStockBasketType.js","Components/Algotrading/Panel.js","Components/Algotrading/TradeChart.js","Components/Algotrading/StrategySelector.js","Components/Algotrading/Algotrading.js","assets/logo.png","Components/Sidebar/SideBar.js","utils/utils.js","utils/MaterialTableIcons.js","utils/MuiTable.js","Components/Ranking/Ranking.js","Components/Executor/ActiveExecutors.js","Components/Executor/SpawnExecutors.js","Components/Executor/ExecutorControlPanel.js","Components/Strategy/StrategyDashboard.js","Components/User/BrokerData.js","Components/User/UserProfile.js","Components/User/UserDashboard.js","Components/Signal/ShowSelectedStocks.js","Components/Signal/StockBucketSelect.js","Components/Signal/GenerateSignalsPanel.js","Components/Signal/GenerateSignals.js","Components/Signal/TradeDetails.js","Components/Signal/SignalsDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["HighchartsDependencies","rel","type","href","src","Editor","code","setCode","useState","isFullScreen","setIsFullScreen","useEffect","handleEscKey","event","key","window","addEventListener","removeEventListener","className","style","height","width","placeholder","mode","theme","name","onChange","currentCode","fontSize","highlightActiveLine","value","setOptions","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","onClick","convertStocksMappingToArray","stocksMapping","stocks","prop","push","label","convertListToDropDown","data","i","length","StockSelect","setter","isMulti","stock_name","options","setoptions","axios","get","dataService","stockSymbol","then","response","e","console","log","defaultValue","convertListToDropdown","forEach","item","convertDateToIST","timestamp","Date","getTime","istOffset","PlotChart","trades","isCandleStickChart","buySellData","map","trade","x","y","amount","quantity","String","marker","action","symbol","fillColor","lineColor","lineWidth","navigation","bindingsClassName","stockTools","gui","enabled","xAxis","dateTimeLabelFormats","millisecond","second","minute","hour","day","month","year","title","text","yAxis","labels","align","resize","top","offset","tooltip","shape","headerShape","pointFormatter","parseFloat","this","toFixed","date","hoursIST","getUTCHours","minutesIST","getUTCMinutes","formattedHours","toString","padStart","formattedMinutes","formattedDate","getFullYear","getMonth","getDate","formattedTime","getSeconds","formatDatetime","borderWidth","shadow","series","generateSeriesForGraph","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","id","plotData","Open","High","Low","Close","SelectStockBasektType","getStockBasketList","Panel","username","formValues","setFormValues","settrades","setAnalysis","description","intervalList","setIntervalList","host","getIntervalList","handleChange","target","selectDropdown","d","Paper","Typography","variant","FormLabel","children","Switch","color","checked","isRequired","backgroundColor","TextField","start_date","end_date","strategy_name","required","multiline","Button","alert","interval","payload","ticker","Array","of","stock_symbol","startDate","endDate","strategyName","enableRanking","ranking","stockBasket","stock_basket","convertFormValuesToPayload","localStorage","getItem","JSON","parse","post","executeStrategy","status","error_description","catch","error","saveStrategy","toUpperCase","strategy_id","indicatorsAll","Highcharts","annotationsAdvanced","priceIndicator","fullScreen","TradeChart","setStockData","setStockName","api_url","getStockData","config","headers","minHeight","position","highcharts","constructorType","containerProps","StrategySelector","strategyList","setStrategyList","setStrategyName","getStrategyList","getStrategyCode","defaultValues","currentDate","setDate","setHours","setMinutes","toLocaleString","getStockMarketOpenTime","getStockMarketEndTime","Algotrading","template","setTrades","analysis","setIsCandleStickChart","Helmet","maxHeight","Object","keys","Math","round","SideBarIcon","icon","path","to","SideBar","userProfilePic","setUserProfilePic","fetchUserProfilePic","alt","logo","size","getColumns","columnsGenerated","extractTradeSingals","element","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","MuiTable","columns","icons","toolbarButtonAlignment","searchAutoFocus","minBodyHeight","maxBodyHeight","pageSize","headerStyle","zIndex","header","tableLayout","rowStyle","overflowWrap","scrollY","paging","components","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","spacing","Ranking","classes","setdata","setcolumns","open","setOpen","code_id","setCode_id","additionalColumn","field","render","params","disableClickEventBubbling","delete","deleteRankingRecord","FetchURL","getRankingDataList","result","cols","FetchURL_fetch_code","getStrategyCodeFromRanking","notFound","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","ActiveExecutors","executorId","updateExecutorStatus","updateExecutorStatusApi","deactivateExecutor","deactivateExecutorApi","activeExecutorsList","list","isArray","obj","executor_id","executor_start_time","stock_list","now","toISOString","slice","remarks","trade_type","broker_name","SpawnExecutors","brokersList","setBrokersList","tradeTypeList","setTradeTypeList","getBrokersList","getTradeTypeList","updateFormValue","onSubmit","spawnNewExecutor","request","executorRequest","executor_type","strategy_params","createExecutorRequest","finalValue","ExecutorControlPanel","StrategyDashboard","setColumns","setData","page_size","page_number","deleteStrategy","apiUrl","strategyMetadataList","requestData","BrokerData","clientname","brokerDetails","setBrokerDetails","holdings","setHoldings","otp","setOtp","isLoggedIn","setIsLoggedIn","setSesssionID","fetchUserHoldings","holdingsPayload","session_id","fetch","getUserHoldings","method","body","stringify","ok","json","message","removeItem","statusText","handleBrokerLogin","loginPayload","totp","brokerLogin","clientId","client_id","brokerSessionId","setItem","handleBrokerLogout","logoutPayload","brokerLogout","holding","index","tradingsymbol","averageprice","UserProfile","userData","setUserData","fetchUserDetails","getUserData","user_details","profile_pic","location","reload","email","pan","phone","gender","about","dob","access","Toast","visible","setVisible","UserDashboard","setUsername","password","setPassword","toastMessage","setToastMessage","toastType","setToastType","sessionID","sessionID_browser","username_browser","sessionExpiry","checkSession","handleSubmit","preventDefault","userLogin","session_expiry_at","ShowSelectedStocks","stockList","updateStockList","stockListName","stock","updatedList","filter","handleCutStock","StockBucketSelect","bucket_name","getStockBucketList","GenerateSignalsPanel","updateStockBucketName","stockBucketName","updatedStockBucketName","getStockBucketData","stock_symbols","start_time","end_time","analysis_engine","generateSignals","saveStockBucketData","GenerateSignals","setStockList","setStockBucketName","TradeDetails","signal","isOpen","onRequestClose","isSummary","setTradeData","fetchTradeData","getSignalSummaryReport","signal_id","getSignalData","report","contentLabel","overlayClassName","ReactModal","setAppElement","handleDeleteSignal","signalId","deleteSignalData","SignalsDashboard","tradeSignals","setTradeSignals","selectedSignal","setSelectedSignal","setIsSummary","fetchTradeSignals","getAllSignalList","renderButton","stopPropagation","handleSignalClick","isSummaryFlag","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b4e0e9a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HighchartsDependencies = () => {\n  return (\n    <>\n      {/* Stylesheets */}\n      <link\n        rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"https://code.highcharts.com/css/stocktools/gui.css\"\n      />\n      <link\n        rel=\"stylesheet\"\n        type=\"text/css\"\n        href=\"https://code.highcharts.com/css/annotations/popup.css\"\n      />\n\n      {/* Scripts */}\n      <script src=\"https://code.highcharts.com/stock/highstock.js\"></script>\n      <script src=\"https://code.highcharts.com/stock/modules/data.js\"></script>\n      <script src=\"https://code.highcharts.com/stock/indicators/indicators-all.js\"></script>\n      <script src=\"https://code.highcharts.com/stock/modules/drag-panes.js\"></script>\n      <script src=\"https://code.highcharts.com/modules/annotations-advanced.js\"></script>\n      <script src=\"https://code.highcharts.com/modules/price-indicator.js\"></script>\n      <script src=\"https://code.highcharts.com/modules/full-screen.js\"></script>\n      <script src=\"https://code.highcharts.com/modules/stock-tools.js\"></script>\n      <script src=\"https://code.highcharts.com/stock/modules/heikinashi.js\"></script>\n      <script src=\"https://code.highcharts.com/stock/modules/hollowcandlestick.js\"></script>\n      <script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\n    </>\n  );\n};\n\nexport default HighchartsDependencies;\n","import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\nimport './Editor.css'; // Import the CSS file for custom styling\n\nfunction Editor({ code, setCode }) {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape') {\n        setIsFullScreen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleEscKey);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKey);\n    };\n  }, []);\n\n  const toggleFullScreen = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  return (\n    <div className={isFullScreen ? 'editor-fullscreen' : 'editor-container'}>\n      <AceEditor\n        style={{ height: '100%', width: '100%' }}\n        placeholder='Start Coding'\n        mode='python'\n        theme='monokai'\n        name='basic-code-editor'\n        onChange={(currentCode) => setCode(currentCode)}\n        fontSize={14}\n        // showPrintMargin={true}\n        // showGutter={true}\n        highlightActiveLine={true}\n        value={code}\n        setOptions={{\n          enableLiveAutocompletion: true,\n          enableSnippets: true,\n          showLineNumbers: true,\n          tabSize: 4,\n        }}\n      />\n      <button\n        className={`fullscreen-button ${isFullScreen ? 'exit' : ''}`}\n        onClick={toggleFullScreen}\n      >\n        {isFullScreen ? 'Exit Full Screen' : 'Full Screen'}\n      </button>\n    </div>\n  );\n}\n\nexport default Editor;\n","\nconst convertDateToUTC = (date) => {\n    // console.log(date);\n    return Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n}\n\nexport const convertStocksMappingToArray = (stocksMapping) => {\n    let stocks = [];\n    // console.log(\"stocksMapping length\", stocksMapping);\n\n    for(var prop in stocksMapping) {\n        stocks.push({\n            label: prop,\n            value: stocksMapping[prop]});\n    }\n    return stocks;\n}\n\n\nexport const convertListToDropDown = (data) => {\n    let stocks = [];\n\n    for(var i=0 ; i<data.length; i++) { \n        stocks.push({\n            label: data[i],\n            value: data[i]});\n    }\n    return stocks;\n}\nconst PlotChart = (data, name) => {\n    // split the data set into ohlc and volume\n    const ohlc = data.map((item) => [\n      convertDateToUTC(new Date(item[0])),\n      item[1], // open\n      item[2], // high\n      item[3], // low\n      item[4] // close\n    ]);\n  \n    const volume = data.map((item) => [convertDateToUTC(new Date(item[0])), item[5]]);\n  \n    return {\n      chart: {\n        type: 'line',\n        events: {\n          load: function () {\n            const yAxis = this.yAxis[0];\n  \n            // Attach event listeners to the yAxis group for drag events\n            yAxis.group.on('mousedown', (e) => {\n              const plotTop = this.plotTop;\n              const plotHeight = this.plotHeight;\n              const axisMin = yAxis.min;\n              const axisMax = yAxis.max;\n  \n              const yAxisClickPosition = e.chartY - plotTop;\n              const yAxisPositionRatio = yAxisClickPosition / plotHeight;\n              const yAxisValueAtClick = axisMax - (axisMax - axisMin) * yAxisPositionRatio;\n  \n              document.addEventListener('mousemove', onMouseMove);\n              document.addEventListener('mouseup', onMouseUp);\n  \n              function onMouseMove(e) {\n                const newAxisValue =\n                  yAxisValueAtClick - ((e.chartY - plotTop) / plotHeight) * (axisMax - axisMin);\n                yAxis.setExtremes(Math.min(axisMax, newAxisValue), axisMax, false);\n              }\n  \n              function onMouseUp() {\n                document.removeEventListener('mousemove', onMouseMove);\n                document.removeEventListener('mouseup', onMouseUp);\n              }\n            });\n          }\n        }\n      },\n      navigator: {\n        enabled: true\n      },\n      // Enable the range selector for selecting the Y-axis range\n      rangeSelector: {\n        enabled: true\n      },\n      yAxis: [\n        {\n          labels: {\n            align: 'left'\n          },\n          height: '80%',\n          resize: {\n            enabled: true\n          }\n        },\n        {\n          labels: {\n            align: 'left'\n          },\n          top: '80%',\n          height: '20%',\n          offset: 0\n        }\n      ],\n      tooltip: {\n        shape: 'square',\n        headerShape: 'callout',\n        borderWidth: 0,\n        shadow: true,\n        positioner: function (width, height, point) {\n          const chart = this.chart;\n          let position;\n  \n          if (point.isHeader) {\n            position = {\n              x: Math.max(\n                // Left side limit\n                chart.plotLeft,\n                Math.min(\n                  point.plotX + chart.plotLeft - width / 2,\n                  // Right side limit\n                  chart.chartWidth - width - chart.marginRight\n                )\n              ),\n              y: point.plotY\n            };\n          } else {\n            position = {\n              x: point.series.chart.plotLeft,\n              y: point.series.yAxis.top - chart.plotTop\n            };\n          }\n  \n          return position;\n        }\n      },\n      series: [\n        {\n          type: 'ohlc',\n          id: name + '-ohlc',\n          name: name + ' Stock Price',\n          data: ohlc\n        },\n      ],\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2100\n            },\n            chartOptions: {\n              rangeSelector: {\n                inputEnabled: false\n              }\n            }\n          }\n        ]\n      }\n    };\n  };\n  \n\nexport default PlotChart;","import Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport { dataService, stockSymbol } from \"../../configs.json\";\nimport {convertStocksMappingToArray} from \"../Charts/utils\";\nimport { Button, Paper, Switch, FormLabel, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction StockSelect(setter,isMulti = false,stock_name = \"stock_name\") {\n  const [options, setoptions] = useState(\"loading\");\n\n  useEffect(() => {\n    axios.get(dataService + stockSymbol).then((response) => {\n      setoptions(convertStocksMappingToArray(response.data.data));\n      // console.log(\"options\", options);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Select\n      onChange={(e) => {\n        console.log(e);\n        if(isMulti){\n          setter(stock_name,e);\n        }else{\n          setter(stock_name,e[\"value\"]);\n        }\n        \n      }}\n      defaultValue={options[0]}\n      options={options}\n      placeholder=\"Select Data\"\n      isMulti = {isMulti}\n    />\n\n    </div>\n    \n  );\n}\n\nexport default StockSelect;\n","\n\n// import Highcharts from 'highcharts';\n// import darkUnicaTheme from 'highcharts/themes/dark-unica';\n\n// Apply the theme using setOptions()\n// Highcharts.setOptions(darkUnicaTheme);\n\n\nexport const addZeroAtstart = (x) => {\n    if (x < 10) return \"0\" + x;\n    return x;\n};\n\n\nexport const convertDictListToDropdown = (data) => {\n    let options = Object.keys(data).map((key) => ({\n        label: data[key],\n        value: key\n    }));\n}\n\nexport const convertListToDropdown = (data) => {\n    let options = [];\n    data.forEach((item) => {\n        options.push({\n            label: item,\n            value: item\n        });\n    }\n    );\n    // console.log(\"options\", options);\n    return options;\n}\n\n\nexport const convertStockDataToOhlc = (stockData, name) => {\n    let ohlc = [];\n    console.log(\"stockData: \", stockData.length);\n    for (let i = 0; i < stockData.length; i++) {\n        ohlc.push(\n            [\n                convertDateToIST(new Date(stockData[i].Date)),\n                stockData[i].Open,\n                stockData[i].High,\n                stockData[i].Low,\n                stockData[i].Close]\n        );\n    }\n\n    // console.log(\"returning ohlc: \", ohlc);\n\n    return {\n        navigation: {\n            bindingsClassName: 'tools-container' // informs Stock Tools where to look for HTML elements for adding technical indicators, annotations etc.\n        },\n        stockTools: {\n            gui: {\n                enabled: true // disable the built-in toolbar\n            }\n        },\n        xAxis: [{\n            type: 'datetime',\n            dateTimeLabelFormats: {\n                month: '%e. %b',\n                year: '%b'\n            },\n            title: { text: \"Dates\" }\n        }],\n        yAxis: [{\n            labels: {\n                align: 'left'\n            },\n            height: '100%',\n            resize: {\n                enabled: true\n            }\n        }, {\n            labels: {\n                align: 'left'\n            },\n            top: '80%',\n            height: '80%',\n            offset: 0\n        }],\n        tooltip: {\n            shape: 'square',\n            headerShape: 'callout',\n            borderWidth: 0,\n            shadow: false,\n\n        },\n        series: [\n            {\n                type: 'candlestick',\n                id: name + '-ohlc',\n                name: name + ' Stock Price',\n                data: ohlc\n            },\n            // {\n            //     type: 'scatter',\n            //     id: '_buySell',\n            //     name: '_buySell',\n            //     data: buySellData,\n            //     // xAxis: 1\n            // }\n        ],\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 1800\n                },\n                chartOptions: {\n                    rangeSelector: {\n                        inputEnabled: false\n                    }\n                }\n            }]\n        }\n    }\n\n\n}\n\n\nexport const getTodaysDate = () => {\n    let today = new Date();\n    return (\n        today.getFullYear() +\n        \"-\" +\n        addZeroAtstart(today.getMonth()) +\n        \"-\" +\n        addZeroAtstart(today.getDate())\n    );\n};\n\n\nconst convertDateToIST = (timestamp) => {\n    const date = new Date(timestamp);\n    const istOffset = 5*60+30;\n    const istTimestamp = date.getTime() + (istOffset) * 60 * 1000;\n  \n    return istTimestamp;\n  };\n\n\n\n\n  export function formatDatetime(timestamp) {\n    const date = new Date(timestamp);\n  \n    // Convert to IST\n    const hoursIST = date.getUTCHours(); // Add 5 hours for IST\n    const minutesIST = date.getUTCMinutes(); // Add 30 minutes for IST\n  \n    // Handle cases where hours and/or minutes exceed 24 and 60, respectively\n    const formattedHours = (hoursIST % 24).toString().padStart(2, '0');\n    const formattedMinutes = (minutesIST % 60).toString().padStart(2, '0');\n  \n    // Format the date and time string\n    const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    const formattedTime = `${formattedHours}:${formattedMinutes}:${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    return `${formattedDate} ${formattedTime}`;\n  }\n  \n\n  export const PlotChart = (data, name, trades, isCandleStickChart) => {\n    const buySellData = trades\n      ? trades\n      .map((trade) => ({\n          x: convertDateToIST(trade.timestamp),\n          y: trade.amount*1.002,\n          // color: trade.action === 'BUY' ? 'green' : 'red',\n          quantity: String(trade.quantity),\n          marker:\n          trade.action === 'BUY' ? {\n            symbol: \"triangle\",\n            fillColor: \"#83ff74\",\n            lineColor: \"black\",\n            lineWidth: 1,\n          } : {\n            symbol: \"triangle-down\",\n            fillColor: \"#ff0000\",\n            lineColor: \"black\",\n            lineWidth: 1,\n          }\n          \n        }))\n      : [];\n\n    return {\n        // themes: darkUnicaTheme,\n      navigation: {\n        bindingsClassName: 'tools-container',\n      },\n      stockTools: {\n        gui: {\n          enabled: true,\n        },\n      },\n      xAxis: {\n        type: 'datetime',\n        dateTimeLabelFormats: {\n          millisecond: '%H:%M:%S.%L',\n          second: '%H:%M:%S',\n          minute: '%H:%M',\n          hour: '%H:%M',\n          day: '%e %b',\n          month: '%e. %b',\n          year: '%b',\n        },\n        title: {\n          text: 'Timestamp',\n        },\n      },\n      yAxis: [\n        {\n          labels: {\n            align: 'left',\n          },\n          height: '80%',\n          resize: {\n            enabled: true,\n          },\n        },\n        {\n          labels: {\n            align: 'left',\n          },\n          top: '80%',\n          height: '20%',\n          offset: 0,\n        },\n      ],\n      tooltip: {\n        shape: 'square',\n        headerShape: 'callout',\n        pointFormatter: function () {\n          return `<b>Value: ${parseFloat(this.y).toFixed(2)}</b><br/>Time: ${formatDatetime(this.x)}`;\n        },\n        borderWidth: 0,\n        shadow: true,\n      },\n      series: generateSeriesForGraph(data, buySellData, isCandleStickChart),\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 2000,\n            },\n            chartOptions: {\n              rangeSelector: {\n                inputEnabled: true,\n              },\n            },\n          },\n        ],\n      },\n    };\n  };\n  \n  const generateSeriesForGraph = (data, buySellData, isCandleStickChart) => {\n    console.log(\"stock data: \", data);\n  \n    if (data == null)\n      return {\n        type: \"candlestick\",\n        id: \"candlestick\",\n        name: \"Stock Price\",\n        data: null,\n      };\n  \n    let plotData = [];\n\n  \n    if (!isCandleStickChart) {\n      // Line chart\n      for (let i = 0; i < data.length; i += 1) {\n        plotData.push({\n          x: convertDateToIST(new Date(data[i].Date)),\n          y: data[i].Close,\n        });\n      }\n  \n      return [\n        \n        {\n          type: \"spline\",\n          id: \"line chart\",\n          name: \"Stock Price\",\n          data: plotData,\n        },\n        {\n          type: \"scatter\",\n          id: \"buySignal\",\n          name: \"Buy sell Signal\",\n          data: buySellData\n        },\n      ];\n    } else {\n      // Candlestick chart\n      for (let i = 0; i < data.length; i += 1) {\n        plotData.push([\n          convertDateToIST(new Date(data[i].Date)),\n          data[i].Open,\n          data[i].High,\n          data[i].Low,\n          data[i].Close,\n        ]);\n      }\n  \n      return [\n        {\n          type: \"candlestick\",\n          id: \"candlestick\",\n          name: \"Stock Price\",\n          data: plotData,\n        },\n        {\n          type: \"scatter\",\n          id: \"buySignal\",\n          name: \"Buy sell Signal\",\n          data: buySellData\n        },\n      ];\n    }\n  };\n  \n\n\n\nexport const convertFormValuesToPayload = (formValues) => {\n    // console.log(\"formValues: \", formValues);\n    // let array = [];\n    let payload = {};\n    payload.ticker = Array.of(formValues.stock_symbol);\n    payload.startDate = formValues.start_date;\n    payload.endDate = formValues.end_date;\n    payload.strategyName = formValues.strategy_name;\n    payload.ticker = formValues.stock_name\n    payload.enableRanking = formValues.ranking\n    payload.stockBasket = formValues.stock_basket\n    payload.username = formValues.username // doubtful\n    payload.description = formValues.description // doubtful\n    payload.interval = formValues.interval // doubtful\n    return payload;\n}\n// export default PlotChart;","import Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport { dataService, getStockBasketList } from \"../../configs.json\";\nimport {convertListToDropdown} from \"./Utils\";\n\nimport { Button, Paper, Switch, FormLabel, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction SelectStockBasektType(setter) {\n  const [options, setoptions] = useState(\"loading\");\n\n  useEffect(() => {\n    axios.get(dataService + getStockBasketList).then((response) => {\n      setoptions(convertListToDropdown(response.data.data));\n    });\n  }, []);\n\n  return (\n    <div>\n\n\n      <Select\n      onChange={(e) => {\n        setter(\"stock_basket\",e[\"value\"]);\n      }}\n      defaultValue={options[0]}\n      options={options}\n      placeholder = \"Select Stock Basket\"\n\n    />\n    </div>\n    \n  );\n}\n\nexport default SelectStockBasektType;\n","import { Button, Paper, Switch, FormLabel, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport StockSelect from \"./StockSelect\";\nimport Select from \"react-select\";\nimport { convertListToDropdown,convertDictListToDropdown } from '../Algotrading/Utils';\n\nimport SelectStockBasektType from \"./SelectStockBasketType\";\n// import { getTodaysDate, getExtraCharges } from \"../utils\";\nimport { host, executeStrategy, saveStrategy,getIntervalList } from \"../../configs.json\";\nimport { convertFormValuesToPayload } from \"./Utils\";\nimport { useEffect,useState } from \"react\";\n\n\n\nexport default function Panel({ username, formValues, setFormValues, code, settrades, setAnalysis, description }) {\n\n  //   const handleReset = () => setFormValues(defaultValues);\n\n  const [intervalList, setIntervalList] = useState([]);\n\n  useEffect(() => {\n\n\n    axios\n      .get(host + getIntervalList)\n      .then((response) => {\n        console.log(\"response for interval list: \" + response);\n        setIntervalList(convertListToDropdown(response.data.data));\n      }\n      );\n\n\n  },[]);\n\n  const handleSubmit = () => {\n\n    // console.log(\"Code Pushed\");\n    if (formValues.strategy_name === \"\") alert(\"Please enter Strategy name\")\n    if (formValues.start_date === \"\") alert(\"Please enter start_date \")\n    if (formValues.end_date === \"\") alert(\"Please enter end_date\")\n    if (formValues.interval === \"\") alert(\"Please select Interval\")\n\n    // ------------------------ Create the payload from the form values -------------------------\n    let payload = convertFormValuesToPayload(formValues);\n    console.log(\"post request\", payload)\n    payload['strategy_code'] = code;\n    payload[\"backtestEngine\"] = \"simple_engine\";\n    \n    if(localStorage.getItem(\"username\")!=null){\n      payload[\"username\"] = localStorage.getItem(\"username\")\n      if(localStorage.getItem(\"brokerDetails\") !=null)\n        payload[\"broker_name\"] = JSON.parse(localStorage.getItem(\"brokerDetails\"))[\"name\"]\n      // payload[\"interval\"] = \"1d\";\n      console.log(\"post request upd\", payload)\n    }\n    \n\n\n\n    axios\n      .post(host + executeStrategy, payload)\n      .then((response) => {\n        console.log(\"trade data\", response.data);\n\n        if (response.data.status == \"SUCCESS\") {\n\n        if (response.data.data == \"RANKING\") {\n          // console.log(\"trades received from server\",response.data.trades)\n          // alert(\"Strategy Sent To Queue..\");\n          alert(\"Strategy Executed and Updated in Ranking\");\n        }else{\n          // console.log(\"trades received from server\",response.data.trades)\n\n          // console.log(\"backtest received from server\",response.data.backtestResult)\n          settrades(response.data.data.trades);\n          delete response.data.data.trades;\n          setAnalysis(response.data.data);\n        }\n      }\n\n\n        else {\n          alert(\"Error: \" + response.data.error_description)\n        }\n\n      })\n      .catch((error) => alert(\"Algo trade data \" + error));\n  };\n\n\n  // save the code using the api providede by analysis service.\n  const saveCode = () => {\n\n    // create payload.\n    var payload = {\n      code: code, strategy_name: formValues.strategy_name,\n      username: formValues.username == null ? localStorage.getItem(\"username\") : \"Anonymous\",\n      description: formValues.description\n    }\n\n\n    console.log(\"view payload\", payload)\n\n    axios\n      .post(host + saveStrategy, payload)\n      .then((response) => {\n        console.log(\"strategy save response\", response);\n        if (response.data.status == 'success'.toUpperCase())\n          alert(\"Strategy Saved, id = \" + response.data.data.strategy_id);\n        else alert(\"failed to save the strategy\")\n      })\n\n\n      .catch((error) => alert(error));\n\n  };\n\n\n\n  // common functino to handle the change in the formValues.\n\n  const handleChange = (e) => {\n    // console.log(\"state = \", formValues,code);\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n\n    // printing first then showing the value.\n    // console.log(formValues);\n  };\n\n\n\n  const handleChangeSwitch = (e) => {\n    const { name, checked } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: checked,\n    });\n\n    // console.log(formValues);\n  };\n\n  const selectDropdown = (name, value) => {\n    let d = {};\n    d[\"target\"] = {};\n    d[\"target\"][\"name\"] = name;\n    d[\"target\"][\"value\"] = value;\n    handleChange(d);\n  };\n\n  return (\n    <Paper className=\"bg-opacity-40 p-4 h-100\" >\n      {/* style=\"height:100%; width:100%;\"> */}\n      <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n        Select Data\n      </Typography>\n      {StockSelect(selectDropdown)}\n\n\n\n      <div className=\"grid md:grid-cols-2 md:grid-rows-2 gap-2 mt-3\">\n\n        <div>\n          <FormLabel children={\"Ranking\"} />\n          <Switch\n            color=\"secondary\"\n            // checked={formValues.ranking}\n            name=\"ranking\"\n            onChange={handleChangeSwitch}\n            // value={formValues.ranking}\n            label={\"Use code for Ranking Service\"}\n          />\n\n        </div>\n        <div>\n        <Select\n          onChange={(e) => selectDropdown(\"interval\",e.value)}\n          placeholder=\"Interval\"\n          name=\"interval\"\n          isRequired={true}\n          defaultValue={intervalList[0]}\n          options={intervalList}\n        />\n       \n        </div>\n\n\n        {SelectStockBasektType(selectDropdown)}\n\n      </div>\n\n\n      <div className=\"grid md:grid-rows-2 gap-3 mt-3\" \n      style={{ backgroundColor: 'rgba(144, 238, 144, 0.5)' }}>\n        <TextField\n          onChange={handleChange}\n          name=\"start_date\"\n          type=\"datetime-local\"\n          value={formValues.start_date}\n          label={\"Start Date\"}\n        />\n\n        <TextField\n          onChange={handleChange}\n          name=\"end_date\"\n          type=\"datetime-local\"\n          value={formValues.end_date}\n          label={\"End Date\"}\n        /> \n\n      </div>\n\n      <div className=\"grid\">\n        <TextField\n          onChange={handleChange}\n          name=\"strategy_name\"\n          type=\"input\"\n          value={formValues.strategy_name}\n          label={\"Strategy name\"}\n          required\n        />\n\n        {/*  not saved right now */}\n        <TextField\n          onChange={handleChange}\n          name=\"description\"\n          multiline=\"true\"\n          type=\"textarea\"\n          value={formValues.description}\n          label={\" description \"}\n        />\n\n      </div>\n      <div className=\"grid grid-col-2 grid-flow-col m-3 align-bottom\">\n        <Button onClick={handleSubmit}>Submit</Button>\n        <Button onClick={saveCode}>Save</Button>\n      </div>\n    </Paper>\n  );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport indicatorsAll from \"highcharts/indicators/indicators-all\";\nimport annotationsAdvanced from \"highcharts/modules/annotations-advanced\";\nimport priceIndicator from \"highcharts/modules/price-indicator\";\nimport fullScreen from \"highcharts/modules/full-screen\";\nimport stockTools from \"highcharts/modules/stock-tools\";\nimport axios from \"axios\";\nimport { PlotChart } from \"./Utils\";\nimport { dataService, getStockData } from \"../../configs.json\";\n\nindicatorsAll(Highcharts);\nannotationsAdvanced(Highcharts);\npriceIndicator(Highcharts);\nfullScreen(Highcharts);\nstockTools(Highcharts);\n\n// Apply the theme using setOptions()\n// Highcharts.setOptions(Highcharts.theme.darkUnicaTheme);\n\nfunction TradeChart(formValues, trades, className, isCandleStickChart) {\n  const [options, setOptions] = useState(null);\n  const [stockData, setStockData] = useState(null);\n  const [stockName, setStockName] = useState(null);\n\n  const api_url = dataService + getStockData;\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  useEffect(() => {\n    const payload = {\n      ticker: formValues.stock_name || \"TATAMOTORS.NS\",\n      startDate: formValues.start_date,\n      endDate: formValues.end_date,\n      interval: formValues.interval || \"1d\",\n    };\n\n    if (localStorage.getItem(\"username\") != null) {\n      payload[\"username\"] = localStorage.getItem(\"username\");\n      if (localStorage.getItem(\"brokerDetails\") != null)\n        payload[\"broker_name\"] = JSON.parse(\n          localStorage.getItem(\"brokerDetails\")\n        )[\"name\"];\n      // payload[\"interval\"] = \"1d\";\n      console.log(\"post request upd\", payload);\n    }\n\n    axios\n      .post(api_url, payload, config)\n      .then((data) => {\n        setOptions(PlotChart(data.data.data, payload.ticker, trades, isCandleStickChart));\n        setStockData(data.data.data);\n        setStockName(payload.ticker);\n        console.log(\"options set : \", options);\n      })\n      .catch((error) => alert(\"Getting Stock Data \" + error));\n  }, [formValues.stock_name, formValues.start_date, formValues.end_date, formValues.interval, trades, isCandleStickChart]);\n\n  return (\n    <div className={className} style={{ minHeight: \"40vh\", width: \"100%\", position: \"relative\" }}>\n      {options && (\n        <HighchartsReact\n          highcharts={Highcharts}\n          constructorType={\"stockChart\"}\n          options={options}\n          containerProps={{ style: { height: \"100%\", width: \"100%\" } }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default TradeChart;\n","import React from 'react'\nimport { host, getStrategyList, getStrategyCode } from \"../../configs.json\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { convertListToDropdown } from \"./Utils\";\nimport { Paper, Typography } from \"@material-ui/core\"\nimport Select from \"react-select\";\n\nexport function StrategySelector({ setCode,formValues,setFormValues }) {\n    const [strategyList, setStrategyList] = useState([]);\n    const [strategyName, setStrategyName] = useState(null);\n\n    useEffect(() => {\n        axios\n            .get(host + getStrategyList)\n            .then((response) => {\n                console.log(\"strategy list\", response.data.data);\n                setStrategyList(convertListToDropdown(response.data.data));\n                console.log(\"strategy list after conversion \", strategyList);\n            }\n            );\n    }, []);\n\n    useEffect(() => {\n        console.log(\"strategy name\", strategyName);\n        if(strategyName != null){\n            axios.get(host + getStrategyCode + \"/\" + strategyName).then((response) => {\n                setCode(response.data.code);\n                setFormValues({\n                    ...formValues,\n                    ['strategy_name']: strategyName,\n                    ['description']: response.data.description\n                  });\n            }\n            );\n        }\n        \n    }, [strategyName]);\n\n\n    return (\n        <Paper className=\"bg-opacity-40 p-4\">\n            {/* code to write heading in mui  */}\n            <Typography variant=\"h7\" className=\"text-center  text-gray-500 text-bold\">\n                Select Strategy\n            </Typography>\n            \n            <Select\n                onChange={(e) => {\n                    setStrategyName(e[\"value\"]);\n                }}\n                defaultValue={strategyList[0]}\n                options={strategyList}\n            />\n        </Paper>\n    )\n};\n\n\n","// Import the necessary dependencies\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Button,\n  Paper,\n  Switch,\n  FormLabel,\n  Typography,\n} from \"@material-ui/core\";\nimport HighchartsDependencies from \"../../utils/HighchartDependencies\";\nimport Editor from \"./Editor\";\nimport Panel from \"./Panel\";\nimport TradeChart from \"./TradeChart\";\nimport { StrategySelector } from \"./StrategySelector\";\nimport { template } from \"./default_template.json\";\nimport \"./Algotrading.css\";\n\n// Utility function to get stock market open time\nconst getStockMarketOpenTime = () => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() - 1);\n  currentDate.setHours(9);\n  currentDate.setMinutes(15);\n  return currentDate.toLocaleString();\n};\n\n// Utility function to get stock market end time\nconst getStockMarketEndTime = () => {\n  const currentDate = new Date();\n  currentDate.setHours(15);\n  currentDate.setMinutes(30);\n  return currentDate.toLocaleString();\n};\n\n// Default values for the form\nconst defaultValues = {\n  stock_name: \"ONGC\",\n  start_date: getStockMarketOpenTime(),\n  end_date: getStockMarketEndTime(),\n  strategy_name: \"Random\",\n  ranking: false,\n  description: \"\",\n  stock_basket: null,\n  interval: \"5m\",\n};\n\nfunction Algotrading() {\n  // State variables\n  const [formValues, setFormValues] = useState(defaultValues);\n  const [strategy, setStrategy] = useState(null);\n  const [code, setCode] = useState(template);\n  const [trades, setTrades] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [isCandleStickChart, setIsCandleStickChart] = useState(true);\n\n  // Function to toggle the candlestick chart visualization\n  const updateCandleStickChart = (e) => {\n    setIsCandleStickChart(e.target.checked);\n  };\n\n  return (\n    <div className=\"m-1 p-0 min-h-screen flex flex-col\">\n      <Helmet>\n        <HighchartsDependencies /> {/* External Highcharts dependencies */}\n      </Helmet>\n\n      <div className=\"m-1 grid md:grid-cols-1 lg:grid-cols-4 gap-4 flex-grow\">\n        {/* Chart component */}\n        <div className=\"col-span-1 lg:col-span-3\">\n          <div\n            className=\"h-96 lg:h-full bg-transparent border border-gray-300 rounded-md overflow-hidden\"\n            style={{ maxHeight: \"55vh\" }}\n          >\n            {TradeChart(formValues, trades, \"h-100 w-100\", isCandleStickChart)}\n          </div>\n        </div>\n\n        {/* Analysis component */}\n        <div className=\"col-span-1 lg:col-span-1 flex flex-col\">\n          <div className=\"text-center font-semibold text-heading mb-3\">\n            Analysis\n          </div>\n          <div className=\"flex-grow overflow-x-auto\">\n            {analysis ? (\n              <div className=\"table-report\">\n                {Object.keys(analysis).map((key) => (\n                  <div className=\"table-row\" key={key}>\n                    <div className=\"key\">{key}</div>\n                    <div className=\"value\">\n                      {typeof analysis[key] === \"number\"\n                        ? Math.round(analysis[key] * 1000) / 1000\n                        : String(analysis[key])}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-gray-500\">Strategy not executed yet</div>\n            )}\n          </div>\n\n          {/* Toggle button for line chart and candlestick visualization */}\n          <div className=\"mt-4\">\n            <Paper className=\"p-2 flex mb-0\">\n              Candle Stick Chart\n              <Switch\n                checked={isCandleStickChart}\n                name=\"enable candle stick chart\"\n                onChange={updateCandleStickChart}\n                label=\"enable candle stick chart\"\n              />\n            </Paper>\n          </div>\n        </div>\n      </div>\n    \n\n<div id=\"filter_code_panel\" className=\"grid md:grid-cols-1 lg:grid-cols-4 gap-4 md:h-100\">\n  <div className=\"col-span-1 lg:col-span-3 \">\n    <Editor code={code} setCode={setCode} />\n  </div>\n\n  <div className=\"col-span-1 lg:col-span-1 rounded-md shadow-md\">\n    <StrategySelector setCode={setCode} formValues={formValues} setFormValues={setFormValues} />\n    <Panel\n      username=\"alvin369\"\n      formValues={formValues}\n      setFormValues={setFormValues}\n      code={code}\n      settrades={setTrades}\n      setAnalysis={setAnalysis}\n      description={null}\n    />\n  </div>\n</div>\n</div>\n\n);\n}\n\nexport default Algotrading;","export default __webpack_public_path__ + \"static/media/logo.1a1f83b8.png\";","import { FaUserAlt, FaAlgolia, FaDev } from 'react-icons/fa';\nimport { MdRequestPage } from 'react-icons/md';\nimport { IoStatsChartSharp } from 'react-icons/io5';\nimport { AiOutlineControl } from 'react-icons/ai';\nimport { FaChessKnight, FaUser ,FaChartLine,FaSignal} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/logo.png';\n\nimport { useState, useEffect } from 'react';\nimport './Sidebar.css';\n\nconst SideBar = () => {\n  const [userProfilePic, setUserProfilePic] = useState('');\n\n  useEffect(() => {\n    const fetchUserProfilePic = () => {\n      const userProfilePic = localStorage.getItem('userProfilePic');\n      setUserProfilePic(userProfilePic);\n    };\n\n    fetchUserProfilePic();\n  }, []);\n\nreturn (\n    <div className=\"fixed top-0 left-0 h-screen w-16 m-0 flex flex-col bg-primary text-secondary shadow-lg\">\n      <SideBarIcon icon={<img alt=\"logo\" src={logo} className=\"rounded\" />} path=\"/\" label=\"Home\" />\n      <SideBarIcon icon={<IoStatsChartSharp size=\"28\" />} path=\"/ranking\" label=\"Ranking\" />\n      <SideBarIcon icon={<AiOutlineControl size=\"28\" />} path=\"/executor_cp\" label=\"Executor CP\" />\n      <SideBarIcon icon={<FaChessKnight size=\"28\" />} path=\"/strategy_dashboard\" label=\"Strategy Dashboard\" />\n\n      <SideBarIcon icon={<FaSignal size=\"28\" />} path=\"/generate_signals\" label=\"Generate Signals\" />\n      <SideBarIcon icon={<FaChartLine size=\"28\" />} path=\"/signals_dashboard\" label=\"Signals Dashboard\" />\n\n\n        <div className=\"user-profile-pic \">\n        <Link to=\"/user\">\n\n      {userProfilePic ? (\n          <img src={userProfilePic} alt=\"User Profile\" />\n          ): \n          <FaUser size=\"28\" className='user-icon'/>\n      }\n        </Link>\n        </div>\n    \n\n\n      </div>\n    \n  );\n};\n\nconst SideBarIcon = ({ icon, path }) => (\n  <Link to={path}>\n    <div className=\"sidebar-icon\">{icon}</div>\n  </Link>\n);\n\nexport default SideBar;\n","export const getColumns = (data) => {\n    let columnsGenerated = [];\n\n    Object.keys(data[0]).map((key) => {\n      if (key != \"tableData\") {\n        // alert table data column needs to be removed\n        let d = {};\n        d[\"title\"] = key;\n        d[\"field\"] = key;\n        columnsGenerated.push(d);\n      }\n    });\n    console.log(\"columnsGenerated\", columnsGenerated);\n  \n    return columnsGenerated;\n  };\n\n  export const getActiveExecutorColumns = () => {\n    let columnsGenerated = [];\n    columnsGenerated.push({\"title\": \"Executor Id\", \"field\": \"executor_id\"})\n    columnsGenerated.push({\"title\": \"Status\", \"field\": \"status\"})\n    return columnsGenerated;\n  }\n\n  export const extractActiveExecutorData = (data) => {\n    let columnsGenerated = [];\n\n    Object.keys(data[0]).map((key) => {\n      if (key != \"tableData\") {\n        // alert table data column needs to be removed\n        let d = {};\n        d[\"title\"] = key;\n        d[\"field\"] = key;\n        columnsGenerated.push(d);\n      }\n    });\n    console.log(\"columnsGenerated\", columnsGenerated);\n  \n    return columnsGenerated;\n  };\n\n\n\n  export const extractTradeSingals = (data) =>{\n    let response = [];\n\n    data.forEach(element => {\n     if( element.trades != null){\n      element.trades.forEach(trades =>{\n        trades[\"stock_name\"] = element.stock_name\n        delete trades[\"stop_loss\"];\n        response.push(trades)\n      })\n    \n     }\n    });\n    return response;\n  }\n","import React, { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default tableIcons;","\nimport MaterialTable from \"material-table\";\n\nimport tableIcons from \"./MaterialTableIcons\";\nimport \"./MuiTables.css\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\nconst MuiTable =(title,data,columns,config = {})=> (\n<div>\n    <MaterialTable\n      title={title}\n      data={data}\n      icons={tableIcons}\n      columns={columns}\n      options={{\n        toolbarButtonAlignment: \"left\",\n        searchAutoFocus: true,\n        minBodyHeight: \"70vh\",\n        maxBodyHeight: \"80vh\",\n        pageSize:20,\n        // selection: true,\n        headerStyle: {\n          backgroundColor: \"#02349b\",\n          color: \"#FFF\",\n          zIndex:config.zIndex\n\n      },\n      header: {\n        position: 'sticky',\n        top: 0,\n    },\n\n      tableLayout: \"fixed\",\n      rowStyle: {\n        overflowWrap: 'break-word'\n    },\n        scrollY:true,\n        paging: true,\n      }}\n      components={{\n        \n      }}\n\n    />\n    </div>\n  );\n\nexport default MuiTable;","\nimport { Button } from \"@material-ui/core\";\n// import {Button} from '@mui/material/Button';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getColumns } from \"../../utils/utils\";\nimport { host, getStrategyCodeFromRanking, getRankingDataList, deleteRankingRecord } from \"../../configs.json\";\n// import ShowCode from \"./ShowCode\";\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Editor from '../Algotrading/Editor'\nimport MuiTable from '../../utils/MuiTable'\n\nconst ShowCodeModal = (e) => {\n  // console.log(\"logs\",e)\n  return (\n    alert(\"code is \" + e)\n  );\n}\n\n\n// make styles\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\n\nfunction Ranking() {\n\n  const classes = useStyles();\n  const [data, setdata] = useState([]);\n  const [columns, setcolumns] = useState([]);\n\n  const [open, setOpen] = useState(false);\n  const [code_id, setCode_id] = useState(null);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Modal view\n  const renderShowCode = (params) => {\n\n    return (<Button variant=\"contained\"\n      color=\"primary\"\n      onClick={(event) => {\n        setOpen(true)\n        setCode_id(params[\"Strategy Name\"])\n      }}     >\n      Code        </Button>);\n  }\n\n  const renderDeleteRanking = (params) => {\n\n    return (<Button variant=\"contained\"\n      className=\"bg-danger\"\n      onClick={(event) => {\n        var payload = { strategyName: params[\"Strategy Name\"] };\n        let config={\n          headers: {'Content-Type' : 'application/x-www-form-urlencoded'}\n      }\n        // https://stackoverflow.com/questions/51069552/axios-delete-request-with-request-body-and-headers\n        axios\n          .delete(host + deleteRankingRecord, {data:payload},config)\n          .then((response) => {\n            console.log(\"delete requested\");\n            // if (response.status != \"SUCCESS\") {\n            //   alert(\"Failed to delete Ranking Record \" + response);\n            // }\n          }\n          );\n\n      }}     >\n      Delete Strategy</Button>);\n  }\n\n  const renderAnalysis = (params) => {\n    return (\n      <Button variant=\"contained\"\n        color=\"secondary\"\n        onClick={(event) => {\n          ShowCodeModal(params.id)\n        }}\n      >\n        Analysis\n      </Button>\n    );\n  }\n\n  //  modal view end\n\n  const additionalColumn = [{\n    title: 'Show code', field: 'code',\n    render: renderShowCode,\n    disableClickEventBubbling: true,\n  },\n  {\n    title: 'Delete Ranking ', field: 'deleteRanking',\n    render: renderDeleteRanking,\n    disableClickEventBubbling: true,\n  },\n    // add analysis button on the table for each row.\n    // {\n    //   title: ' ', field: 'analysis',\n    //   render: renderAnalysis,\n    //   // padding: 0,\n    //   // margin: 0,\n    //   // disableClickEventBubbling: true,\n    // },\n  ]\n\n\n  // const FetchURL = host + getUserInvestmentData + 'buy/alvin369' ;\n\n\n  useEffect(() => {\n    const FetchURL = host + getRankingDataList;\n    (async () => {\n\n      const result = await axios(FetchURL);\n      if(result.data.response.length === 0) {\n        console.log(\"null data\");\n        return;\n      }\n      setdata(result.data.response);\n      var cols = getColumns(result.data.response);\n      cols.push(...additionalColumn);\n\n      setcolumns(cols);\n      console.log(\"column \", columns);\n      console.log(\"data \", data);\n\n    })();\n  }, []);\n\n\n  // get code \n  const [code, setCode] = useState(null);\n\n\n  // get the code for the strategy..\n  useEffect(() => {\n    (async () => {\n      // const FetchURL_fetch_code = host + getStrategyCodeFromRanking + code_id + \"/\";\n\n      const FetchURL_fetch_code = host + getStrategyCodeFromRanking;\n\n      if (code_id != null) {\n        const payload = { \"strategyName\": code_id }\n        const result = await axios.post(FetchURL_fetch_code, payload);\n        setCode(result.data.response);\n      }\n\n\n      // setCode(\"import os\")\n      // console.log(code);\n    })();\n  }, [code_id]);\n\n\n\n\n  const notFound = <div className=\"loading\">Loading data</div>;\n\n  return (\n    <div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className=\"w-4/5 h-3/4 bg-gray-600 text-white\">\n            <h1>Code</h1>\n\n            <Editor code={code} setCode={setCode} />\n          </div>\n        </Fade>\n      </Modal>\n\n      {data && columns ? MuiTable(\"Ranking\", data, columns) : notFound}\n    </div>\n    // </div>\n  );\n}\n\nexport default Ranking;","import React from 'react'\nimport { host, activeExecutorsList, updateExecutorStatus,deactivateExecutor } from \"../../configs.json\";\nimport { getColumns,getActiveExecutorColumns } from \"../../utils/utils\";\nimport MuiTable from '../../utils/MuiTable'\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Button } from \"@material-ui/core\";\nimport { log } from '@craco/craco/lib/logger';\n\n\nfunction updateExecutorStatusApi(executorId,status){\n\n    \n\n    const FetchURL = host + updateExecutorStatus;\n    let payload = {}\n    payload['status'] = status;\n    payload['executor_id'] = executorId;\n\n    console.log(\"executor id is \"+executorId);\n\n    axios.post(FetchURL,payload).then(response => {\n\n      if(response.data.status != \"SUCCESS\") \n      alert(\"Executor Id \"+executorId+\" not updated\");\n    }\n    )\n\n\n}\n\nfunction parseList(list) {\n\n  if (!Array.isArray(list)) {\n    return []; // Return an empty array if the input is not an array\n  }\n\n  return list.map(obj => {\n    const { status, executor_id,data } = obj;\n    const {strategy_name,executor_start_time}  =data;\n    return {executor_start_time, status, executor_id,strategy_name };\n  });\n}\n\nfunction deactivateExecutorApi(executorId){\n\n    const FetchURL = host + deactivateExecutor;\n\n    axios.post(FetchURL,{\"executor_id\":executorId}).then(response => {\n\n      if(response.data.status != \"SUCCESS\") \n      alert(\"Executor Id \"+executorId+\" not deactivated\");\n    }\n    )\n    // (async () => {\n    //   const result = await axios.post(FetchURL,{\"executor_id\":executorId});\n    //   if(result.data.status != \"SUCCESS\") \n    //   alert(\"Executor Id \"+executorId+\" not deactivated\");\n    // })();\n  \n}\n\nfunction ActiveExecutors() {\n    const [data, setdata] = useState([]);\n    const [columns, setcolumns] = useState([]);\n\n    const executorIdName = \"executor_id\";\n    \n    const renderPauseButton = (params) => {\n    \n        return (<Button variant=\"contained\"\n          color=\"primary\"\n          onClick={(event) => {\n            updateExecutorStatusApi(params[executorIdName],\"PAUSE\")\n          }}    \n           >\n          PAUSE </Button>);\n      }\n\n\n      const renderDeactivateButton = (params) => {\n    \n        return (<Button variant=\"contained\"\n          color=\"danger\"\n          onClick={(event) => {\n            deactivateExecutorApi(params[executorIdName])\n          }}    \n           >\n          Deactivate </Button>);\n      }\n\n    const additionalColumn = [{\n        title: 'Update Status', field: 'updateStatus',\n        render: renderPauseButton,\n        disableClickEventBubbling: true,\n      },{\n        title: 'Deactivate Executor', field: 'deactivate',\n        render: renderDeactivateButton,\n        disableClickEventBubbling: true,\n      }] \n\n      \n\n  useEffect(() => {\n    const FetchURL = host + activeExecutorsList;\n    (async () => {\n\n      var result = await axios(FetchURL);\n      console.log(\"result data\",result);\n      result = parseList(result.data);\n\n      console.log(\"result data updated \",result);\n      if(result.length === 0) {\n        console.log(\"null data\");\n        return;\n      }\n      \n      setdata(result);\n\n      var cols = getColumns(result);\n      cols.push(...additionalColumn);\n\n      setcolumns(cols);\n    })();\n  }, []);\n\n\n  const notFound = <div className=\"loading\">Loading data</div>;\n\n  return (\n    <div>\n        {data && columns ? MuiTable(\"Active Executors\", data, columns) : notFound}\n    </div>\n  )\n}\n\nexport default ActiveExecutors;","import React from 'react'\nimport { Button, Paper, Switch, FormLabel, Typography } from \"@material-ui/core\";\nimport { StrategySelector } from '../Algotrading/StrategySelector';\nimport Select from \"react-select\";\nimport { host, getStrategyList, getStrategyCode, getBrokersList, getTradeTypeList } from \"../../configs.json\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { convertListToDropdown,convertDictListToDropdown } from '../Algotrading/Utils';\nimport StockSelect from \"../Algotrading/StockSelect\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { spawnNewExecutor } from \"../../configs.json\";\n\n\nconst defaultValues = {\n  stock_list: [\"INFY\"],\n  start_date: new Date(Date.now() - (1000 * 60 * 60 * 24 * 30)).toISOString().slice(0, 10),\n  end_date: new Date().toISOString().slice(0, 10),\n  // start_date: \"2021-10-20\",\n  // end_date: \"2021-11-20\",\n  strategy_name: \"Random\",\n  remarks: \"\",\n  username: \"pankaj369\",\n  trade_type: \"HISTORICAL_TRADING\",\n  broker_name: \"PAPER_TRADING\"\n};\n\n\nconst createExecutorRequest = (request) => {\n  console.log(\"new executor request\", request)\n\n  let executorRequest = {}\n  executorRequest.broker_name = request.broker_name; // ANGER_ONE, PAPER_TRADING\n  executorRequest.executor_type = \"ALGORITHM\"; // need dropdown at  ui later.\n  executorRequest.trade_type = request.trade_type;\n  executorRequest.username = request.username;\n  executorRequest.remarks = request.remarks;\n\n  executorRequest.strategy_params = {\n    stock_list:request.stock_list,\n    strategy_name: request.strategy_name,\n    start_date: request.start_date,\n    end_date: request.end_date\n  }\n\n  return executorRequest;\n}\n\n\nexport default function SpawnExecutors() {\n\n  // drop down selections\n  const [strategyList, setStrategyList] = useState([]);\n  const [brokersList, setBrokersList] = useState([]);\n  const [tradeTypeList, setTradeTypeList] = useState([]);\n\n\n  const [strategyName, setStrategyName] = useState(null);\n  const [formValues, setFormValues] = useState(defaultValues);\n\n  useEffect(() => {\n    axios\n      .get(host + getStrategyList)\n      .then((response) => {\n        setStrategyList(convertListToDropdown(response.data.data));\n      }\n      );\n\n\n    axios\n      .get(host + getBrokersList)\n      .then((response) => {\n        setBrokersList(convertListToDropdown(response.data.data));\n      }\n      );\n\n\n    axios\n      .get(host + getTradeTypeList)\n      .then((response) => {\n        setTradeTypeList(convertListToDropdown(response.data.data));\n      }\n      );\n\n  }, []);\n\n  const submitNewExecutorRequest = () => {\n    console.log(\"new executor request\", formValues)\n\n    axios\n      .post(host + spawnNewExecutor, createExecutorRequest(formValues))\n      .then((response) => {\n        console.log(\"trade data\", response.data);\n        alert(\"Executor Id \" + response.data.executor_id)\n      }).catch((error) => alert(error));\n\n  }\n\n  // {stock_list: Array(1), start_date: '2023-05-18', end_date: '2023-06-17', strategy_name: 'Random', remarks: '', …}\n\n  const handleChange = (e) => {\n    // console.log(\"state = \", formValues,code);\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n\n    // printing first then showing the value.\n    // console.log(formValues);\n  };\n\n  const extractValuesFromMultiSelect = (name, value) => {\n    var finalValue = [];\n\n    value.forEach((value) => finalValue.push(value.value));\n\n    setFormValues({\n      ...formValues,\n      [name]: finalValue,\n    });\n  };\n\n  const updateFormValue = (name, value) => {\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n<form onSubmit={submitNewExecutorRequest}>\n      <Paper className=\"bg-opacity-40 p-4 h-100\" >\n        <h1 className=\"text-center font-bold text-lg\">Create Executor</h1>\n        {/* style=\"height:100%; width:100%;\"> */}\n        <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n          Select Strategy\n        </Typography>\n\n        <Select\n          onChange={(e) => {\n            updateFormValue(\"strategy_name\", e.value)\n            // setStrategyName(e[\"value\"]);/\n          }}\n          placeholder = \"Select Strategy\"\n          isRequired = {true}\n          defaultValue={strategyList[0]}\n          options={strategyList}\n        />\n\n        <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n          Select Stocks\n        </Typography>\n        {StockSelect(extractValuesFromMultiSelect, true, \"stock_list\")}\n\n        <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n\n          <Select\n            onChange={(e) => {\n              updateFormValue(\"trade_type\", e.value)\n              // setStrategyName(e[\"value\"]);/\n            }}\n            placeholder = \"Select trade Type\"\n          isRequired = {true}\n            defaultValue={tradeTypeList[0]}\n            options={tradeTypeList}\n          />\n\n<Select\n  onChange={(e) => {\n    updateFormValue(\"broker_name\", e.value);\n  }}\n  placeholder=\"Select Broker\"\n  isRequired={true}\n  defaultValue={brokersList[0]}\n  options={brokersList}\n/>\n\n\n\n        </div>\n\n\n        <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n          <TextField\n            onChange={handleChange}\n            name=\"start_date\"\n            type=\"date\"\n            value={formValues.start_date}\n            label={\"Start Date\"}\n          />\n\n          <TextField\n            onChange={handleChange}\n            name=\"end_date\"\n            type=\"date\"\n            value={formValues.end_date}\n            label={\"End Date\"}\n          />\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n          <TextField\n            onChange={handleChange}\n            name=\"remarks\"\n            multiline=\"true\"\n            type=\"textarea\"\n            value={formValues.remarks}\n            label={\" remarks \"}\n          />\n\n          <TextField\n            onChange={handleChange}\n            name=\"username\"\n            multiline=\"false\"\n            type=\"textarea\"\n            value={formValues.username}\n            label={\" username \"}\n          />\n\n        </div>\n        <div className=\"grid grid-col-1 grid-flow-col m-3 align-bottom\">\n          <Button className=' bg-green-100'\n            type = \"submit\" > Submit </Button>\n        </div>\n\n      </Paper>\n      </form>\n    </div>\n  )\n}\n\n// {\n//   \"stock_list\" : [\"REL\"],\n\n\n//     \"strategy_name\" : \"Random\",\n//       \"broker_name\" : \"PAPER_TRADING\",\n//         \"trade_type\" : \"HISTORICAL_TRADING\",\n//           \"start_date\" : \"2022-01-01\",\n//             \"end_date\" : \"2022-06-01\",\n//               \"username\": \"pankaj369\",\n//                 \"remarks\": \"testing strategy\"\n// }","import React from 'react';\nimport ActiveExecutors from './ActiveExecutors';\nimport SpawnExecutors from './SpawnExecutors';\n\nexport default function ExecutorControlPanel() {\n  return (\n    <div className=\"container m-1 p-2\">\n    <div className=\"grid grid-cols-3 md:grid-cols-5 \">\n      <div className=\"col-span-3 md:col-span-3 rounded-lg shadow-lg p-4\">\n        {ActiveExecutors()}\n      </div>\n  \n      <div className=\"col-span-2 md:col-span-2 rounded-lg shadow-lg p-4\">\n        {SpawnExecutors()}\n      </div>\n    </div>\n  </div>\n  \n  );\n}\n","import MuiTable from \"../../utils/MuiTable\";\nimport { host, strategyMetadataList, deleteStrategy,getStrategyCode } from \"../../configs.json\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { getColumns } from \"../../utils/utils\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Editor from '../Algotrading/Editor'\n\nconst ShowCodeModal = (e) => {\n    // console.log(\"logs\",e)\n    return (\n        alert(\"code is \" + e)\n    );\n}\n\n// make styles\nconst useStyles = makeStyles(theme => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n\nexport default function StrategyDashboard() {\n\n    const [columns, setColumns] = useState([])\n    const [data, setData] = useState([])\n    const [page_size, setpage_size] = useState(100)\n    const [page_number, setpage_number] = useState(0)\n\n    const [open, setOpen] = useState(false);\n    const [code_id, setCode_id] = useState(null);\n\n    // get code \n    const [code, setCode] = useState(null);\n\n\n    const classes = useStyles();\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // Modal view\n    const renderShowCode = (params) => {\n\n        return (<Button variant=\"contained\"\n            color=\"primary\"\n            onClick={(event) => {\n                setOpen(true)\n                setCode_id(params[\"strategy_name\"])\n                console.log(\"setting the code id to \" + params[\"strategy_name\"])\n            }}     >\n            Code        </Button>);\n    }\n\n    const renderDeleteRanking = (params) => {\n\n        return (<Button variant=\"contained\"\n            className=\"bg-danger\"\n            onClick={(event) => {\n                var payload = { strategy_name: params[\"strategy_name\"] };\n                let config = {\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n                }\n                // https://stackoverflow.com/questions/51069552/axios-delete-request-with-request-body-and-headers\n                axios\n                    .delete(host + deleteStrategy, { data: payload }, config)\n                    .then((response) => {\n                        console.log(\"delete requested\");\n                        // if (response.status != \"SUCCESS\") {\n                        //   alert(\"Failed to delete Ranking Record \" + response);\n                        // }\n                    }\n                    );\n\n            }}     >\n            Delete Strategy</Button>);\n    }\n\n    const renderAnalysis = (params) => {\n        return (\n            <Button variant=\"contained\"\n                color=\"secondary\"\n                onClick={(event) => {\n                    ShowCodeModal(params.id)\n                }}\n            >\n                Analysis\n            </Button>\n        );\n    }\n\n    //  modal view end\n\n    const additionalColumn = [{\n        title: 'Show code', field: 'code',\n        render: renderShowCode,\n        disableClickEventBubbling: true,\n    },\n    {\n        title: 'Delete Ranking ', field: 'deleteRanking',\n        render: renderDeleteRanking,\n        disableClickEventBubbling: true,\n    },\n        // add analysis button on the table for each row.\n        // {\n        //   title: ' ', field: 'analysis',\n        //   render: renderAnalysis,\n        //   // padding: 0,\n        //   // margin: 0,\n        //   // disableClickEventBubbling: true,\n        // },\n    ]\n\n\n\n\n\n\n    useEffect(() => {\n\n        const apiUrl = host + strategyMetadataList; // http://127.0.0.1:8080/api/v1/strategy/get-all-strategy-metadata';\n        const requestData = {\n            page_size: page_size,\n            page_number: page_number\n        };\n\n        axios.post(apiUrl, requestData).then(result => {\n\n            console.log(\"strategy result log\", result);\n            setData(result.data)\n\n            // console.log(\"strategy data\",data);/\n            var cols = getColumns(result.data);\n\n            cols.push(...additionalColumn);\n            setColumns(cols);\n\n        }\n        );\n\n\n        // axios.get(dataService + stockSymbol).then((response) => {\n        //   setoptions(convertStocksMappingToArray(response.data.data));\n        // console.log(\"options\", options);\n        // });\n    }, [page_number, page_size]);\n\n\n\n  // get the code for the strategy..\n  useEffect(() => {\n    (async () => {\n      // const FetchURL_fetch_code = host + getStrategyCodeFromRanking + code_id + \"/\";\n\n      const FetchURL_fetch_code = host + getStrategyCode+\"/\"+code_id;\n\n      if (code_id != null) {\n        const result = await axios.get(FetchURL_fetch_code);\n        setCode(result.data.code);\n      }\n    })();\n  }, [code_id]);\n\n    return (\n        <div className=\"grid container m-2 p-2\">\n <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className=\"w-4/5 h-3/4 bg-gray-600 text-white\">\n            <h1>Code</h1>\n\n            <Editor code={code} setCode={setCode} />\n          </div>\n        </Fade>\n      </Modal>\n\n\n                {/* this is causing issue */}\n                {(MuiTable(\"Strategy Dashboard\", data, columns))}\n            \n        </div>\n    );\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { host, brokerLogin, getUserHoldings,brokerLogout } from \"../../configs.json\";\nimport './BrokerData.css';\n\nexport default function BrokerData({ clientname }) {\n  const [brokerDetails, setBrokerDetails] = useState(null);\n  const [holdings, setHoldings] = useState([]);\n  const [otp, setOtp] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [sessionID, setSesssionID] = useState(false);\n  useEffect(() => {\n    const fetchUserHoldings = async () => {\n      try {\n        let holdingsPayload = {\n        broker_name: \"ANGEL_ONE\",\n          username: clientname,\n          session_id: localStorage.getItem(\"brokerSessionID\")\n        };\n  \n        const response = await fetch(host + getUserHoldings, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(holdingsPayload)\n        });\n  \n        if (response.ok) {\n          const data = await response.json();\n          if (data.status === \"SUCCESS\") {\n            // console.log(\"Success in holdings\", data.data);\n            if(data.data.message ==\"Please Login to fetch the holdings\"){\n              localStorage.removeItem(\"brokerDetails\");\n              setIsLoggedIn(false);\n            }\n            setHoldings(data.data.data);\n            // console.log(\"is logged in:\", isLoggedIn);\n            // console.log(\"holdings data:\", data.data.data);\n          } else {\n            console.error('Error:', data.error_description);\n          }\n        } else {\n          console.error('Error:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  \n    if (isLoggedIn) {\n      fetchUserHoldings();\n    }\n  }, [isLoggedIn]);\n  \n\n  const handleBrokerLogin = async () => {\n    try {\n        console.log('client anem is ',clientname);\n\n        let loginPayload = {\n            broker_name: \"ANGEL_ONE\",\n            username: clientname,\n            session_id: localStorage.getItem(\"sessionID\"),\n            totp: otp\n        }\n      const response = await fetch(host + brokerLogin, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(loginPayload),\n      });\n\n      if (response.ok) {\n\n            const data = await response.json();\n\n        if(data.status == \"SUCCESS\"){\n            setBrokerDetails({name : data.data.broker_name,clientId: data.data.client_id,\n                brokerSessionId:data.data.session_id});\n            setIsLoggedIn(true);\n            setSesssionID(data.data.session_id);\n            localStorage.setItem(\"brokerDetails\", JSON.stringify({name : data.data.broker_name,clientId: data.data.client_id,\n                brokerSessionId:data.data.session_id}));\n        }\n        else{\n            console.error('Error:', data.error_description);\n        }\n      } else {\n        console.error('Error:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleBrokerLogout = async () => {\n    try {\n        let logoutPayload = {\n            broker_name: \"ANGEL_ONE\",\n            username: clientname,\n            // session_id: localStorage.getItem(\"brokerSessionID\")\n        }\n      const response = await fetch(host + brokerLogout, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(logoutPayload),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n      } else {\n        console.error('Error:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleLogout = () => {\n\n    handleBrokerLogout();\n\n    setBrokerDetails(null);\n    setHoldings([]);\n    setIsLoggedIn(false);\n    localStorage.removeItem('brokerDetails')\n  };\n\n\n  useEffect(() => {\n    setBrokerDetails(JSON.parse(localStorage.getItem(\"brokerDetails\")));\n    if(JSON.parse(localStorage.getItem(\"brokerDetails\") != null))\n        {setIsLoggedIn(true);}\n  }, []);\n\n\n  return (\n    <div className=\"broker-container\">\n      {brokerDetails ? (\n        <>\n        <div className=\"profile-header\">\n        <h2 className=\"profile-username\">{brokerDetails.name}</h2>\n        <p>Broker ID: {brokerDetails.clientId}</p>\n        <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n      </div>\n\n          {/* <div className=\"broker-details\">\n            <h3><center><b>{brokerDetails.name}</b></center></h3>\n            <p>Broker ID: {brokerDetails.clientId}</p>\n          </div> */}\n          {/* <button className=\"logout-button\" onClick={handleLogout}>Logout</button> */}\n        </>\n      ) : (\n        <div className=\"broker-login\">\n          <h3>Broker Login</h3>\n          <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\n          <button onClick={handleBrokerLogin}>Login</button>\n        </div>\n      )}\n\n    {\n      holdings.length > 0 ? \n      (\n        <div className=\"holdings-table\">\n          <h3>Holdings</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>tradingsymbol</th>\n                <th>Quantity</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n              {holdings.map((holding, index) => (\n                <tr key={index}>\n                  <td>{holding.tradingsymbol}</td>\n                  <td>{holding.quantity}</td>\n                  <td>{holding.averageprice}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ):<div/>\n      \n      } \n\n\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { host, getUserData, brokerLogin, getUserHoldings } from \"../../configs.json\";\nimport './UserProfile.css'; // Import the CSS file for styling\nimport BrokerData from './BrokerData';\n\nfunction UserProfile({ username }) {\n  const [userData, setUserData] = useState(null);\n \n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const response = await fetch(`${host + getUserData}?username=${username}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUserData(data.data);\n\n          localStorage.setItem('userProfilePic', data.data.user_details.profile_pic);\n        } else {\n          console.error('Error:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchUserDetails();\n  }, [username]);\n\n  const handleLogout = () => {\n    // Clear username and sessionID from localStorage\n    localStorage.removeItem('username');\n    localStorage.removeItem('sessionID');\n    localStorage.removeItem('userProfilePic');\n    // Refresh the page\n    window.location.reload();\n  };\n\n\n\n\n  return (\n    <div>\n    <div className=\"profile-container glassy\">\n      <div className=\"profile-header\">\n        <h2 className=\"profile-username\">{userData ? userData.username : 'Loading...'}</h2>\n        <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n      </div>\n      <div className=\"profile-details\">\n        {userData ? (\n          <>\n            <div className=\"profile-avatar\">\n              <img src={userData.user_details.profile_pic} alt=\"User Avatar\" />\n            </div>\n            <div className=\"profile-info\">\n              <p className=\"profile-field\"><strong>Email:</strong> {userData.email}</p>\n              <p className=\"profile-field\"><strong>PAN:</strong> {userData.pan}</p>\n              <p className=\"profile-field\"><strong>Phone:</strong> {userData.phone}</p>\n              <p className=\"profile-field\"><strong>Gender:</strong> {userData.user_details.gender}</p>\n              <p className=\"profile-field\"><strong>About:</strong> {userData.user_details.about}</p>\n              <p className=\"profile-field\"><strong>Date Of Birth:</strong> {userData.user_details.dob}</p>\n              <div className=\"access-pills\">\n                <strong>Access:</strong>\n                {userData.access.map((access, index) => (\n                  <span key={index} className=\"access-pill\">{access}</span>\n                ))}\n              </div>\n            </div>\n          </>\n        ) : (\n          <p>Loading user data...</p>\n        )}\n      </div>\n      </div>\n      <br/>\n     {userData ?  <BrokerData clientname={userData.username} className = \"glassy\" />:<div>USername not found</div>}\n    </div>\n  );\n}\n\nexport default UserProfile;\n","import React, { useState, useEffect } from 'react';\nimport './UserDashboard.css';\nimport { host, userLogin, brokerLogin } from \"../../configs.json\";\nimport UserProfile from \"./UserProfile\";\n\nfunction Toast({ message, type }) {\n  const [visible, setVisible] = useState(true);\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  return visible ? (\n    <div className={`toast ${type}`}>\n      <p className=\"message\">{message}</p>\n      <button className=\"close-button\" onClick={handleClose}>\n        X\n      </button>\n    </div>\n  ) : null;\n}\n\n\nfunction UserDashboard() {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState('');\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastType, setToastType] = useState('');\n  const [sessionID, setSesssionID] = useState(null);\n//   const [userData, setUserData] = useState(null);\n\n  const checkSession = () => {\n    console.log('Checking session');\n    const sessionID_browser = localStorage.getItem('sessionID');\n    const username_browser = localStorage.getItem('username');\n    const sessionExpiry = localStorage.getItem('sessionExpiry');\n    const currentTime = new Date().getTime();\n\n    if (sessionID_browser && username_browser && sessionExpiry ){\n        // && currentTime < sessionExpiry) {÷\n      // User already logged in, fetch user details\n      setUsername(username_browser);\n      setSesssionID(sessionID_browser)\n    }\n  };\n\n\n\n  useEffect(() => {\n    checkSession();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(host + userLogin, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n\n        if (data.status === 'SUCCESS') {\n          localStorage.setItem('sessionID', data.data.session_id);\n          localStorage.setItem('username', data.data.username);\n          localStorage.setItem('sessionExpiry', new Date(data.data.session_expiry_at).getTime());\n          setToastMessage('Login Successful!');\n          setToastType('success');\n        //   setUserData(data.data);\n        window.location.reload();\n        } else {\n          setToastMessage('Login Failed! - ' + data.error_description);\n          setToastType('error');\n        }\n      } else {\n        setToastMessage('Something went wrong');\n        setToastType('error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {(username && sessionID) ? (\n        <UserProfile username={username} session_id = {sessionID} />\n      ): (\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <h2>User Login</h2>\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            className=\"input\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button className=\"button\" type=\"submit\">\n            Login\n          </button>\n        </form>\n      ) }\n      {toastMessage && <Toast message={toastMessage} type={toastType} />}\n    </div>\n  );\n}\n\nexport default UserDashboard;\n","import \"./ShowSelectedStocks.css\";\nimport React from 'react';\n\n\nconst ShowSelectedStocks = ({ stockList, updateStockList,stockListName }) => {\n    const handleCutStock = (stock) => {\n      // Remove stock from the list\n      const updatedList = stockList.filter(item => item !== stock);\n      updateStockList(updatedList);\n    };\n  \n    return (\n      <div className=\"show-selected-stocks-container\">\n      <h2 className=\"cortexHeading\">Stock Bucket List: <i><u>{stockListName}</u></i></h2>\n      <div className=\"show-selected-stocks-list\">\n        {stockList.map(stock => (\n          <div key={stock} className=\"show-selected-stocks-row animate__animated animate__fadeIn\">\n            <span className=\"mr-3\">{stock}</span> \n            <button className=\"show-selected-stocks-button\" onClick={() => handleCutStock(stock)}>x</button>\n          </div>\n        ))}\n      </div>\n    </div>\n    );\n  };\n  \n\nexport default ShowSelectedStocks;\n","import Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport { host, getStockBucketList } from \"../../configs.json\";\nimport {convertListToDropDown} from \"../Charts/utils\";\nimport { Button, Paper, Switch, FormLabel, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction StockBucketSelect(setter,isMulti = false,bucket_name = \"stockBucketName\") {\n  const [options, setoptions] = useState(\"loading\");\n\n  useEffect(() => {\n    axios.get(host + getStockBucketList).then((response) => {\n      setoptions(convertListToDropDown(response.data.data));\n      console.log(\"options stockbucketlist\", convertListToDropDown(response.data.data));\n    });\n  }, []);\n\n  return (\n    <div>\n      <Select\n      onChange={(e) => {\n        console.log(\"dropdown updated of stock bucket\",e);\n        if(isMulti){\n          setter(bucket_name,e[\"value\"]);\n        }else{\n          setter(bucket_name,e[\"value\"]);\n        }\n        \n      }}\n      defaultValue={options[0]}\n      options={options}\n      placeholder=\"Select Data\"\n      isMulti = {isMulti}\n    />\n\n    </div>\n    \n  );\n}\n\nexport default StockBucketSelect;\n","import React from 'react'\nimport {\n    Button,\n    Paper,\n    Switch,\n    FormLabel,\n    Typography\n} from \"@material-ui/core\";\nimport {StrategySelector} from '../Algotrading/StrategySelector';\nimport Select from \"react-select\";\nimport {\n    host,\n    getStrategyList,\n    getStockBucketData,\n    getBrokersList,saveStockBucketData,getIntervalList,\n    getTradeTypeList\n} from \"../../configs.json\";\nimport {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {convertListToDropdown, convertDictListToDropdown} from '../Algotrading/Utils';\nimport StockSelect from \"../Algotrading/StockSelect\";\nimport StockBucketSelect from \"../Signal/StockBucketSelect\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport {generateSignals} from \"../../configs.json\";\n\nconst defaultValues = {\n\n//     stock_list: [\"INFY\"],\n    start_date: new Date(Date.now() - (1000 * 60 * 60 * 24 * 30)).toISOString().slice(0, 10),\n    end_date: new Date().toISOString().slice(0, 10),\n//     // start_date: \"2021-10-20\",\n//     // end_date: \"2021-11-20\",\n//     strategy_name: \"Random\",\n    // interval: \"1d\",\n    username: localStorage.getItem(\"username\"),\n//     broker_name: \"PAPER_TRADING\",\n//     stockBucketName: \"test\"\n};\n\n\nfunction GenerateSignalsPanel({updateStockList, updateStockBucketName,stockList}) {\n    const [strategyList, setStrategyList] = useState([]);\n    const [brokersList, setBrokersList] = useState([]);\n    const [intervalList, setIntervalList] = useState([]);\n    const [formValues, setFormValues] = useState(defaultValues);\n\n\n    useEffect(() => {\n        if(formValues.stockBucketName == null) return;\n        \n        console.log(\"Generating selected stocks\", formValues.stockBucketName);\n\n        updateStockBucketName(formValues.stockBucketName);\n        formValues.updatedStockBucketName = formValues.stockBucketName;\n        axios.get(host + getStockBucketData, {\n            params: {\n                request: formValues.stockBucketName\n            }\n        }).then((response) => { // console.log(\"Successfully stored \",convertListToDropdown(response.data.data.stock_symbols));\n            updateStockList(response.data.data.stock_symbols);\n        });\n    }, [formValues.stockBucketName]);\n\n\n    useEffect(() => {\n        axios.get(host + getStrategyList).then((response) => {\n            setStrategyList(convertListToDropdown(response.data.data));\n        });\n\n\n        axios.get(host + getBrokersList).then((response) => {\n            setBrokersList(convertListToDropdown(response.data.data));\n        });\n\n\n        axios.get(host + getIntervalList).then((response) => {\n            setIntervalList(convertListToDropdown(response.data.data));\n        });\n\n    }, []);\n\n    const extractValuesFromMultiSelect = (name, value) => {\n        var finalValue = [];\n\n        value.forEach((value) => finalValue.push(value.value));\n\n        setFormValues({\n            ...formValues,\n            [name]: finalValue\n        });\n    };\n\n\n    const handleChange = (e) => { // console.log(\"state = \", formValues,code);\n        const {name, value} = e.target;\n        setFormValues({\n            ...formValues,\n            [name]: value\n        });\n\n        // printing first then showing the value.\n        // console.log(formValues);\n    };\n\n\n    const updateFormValue = (name, value) => {\n        setFormValues({\n            ...formValues,\n            [name]: value\n        });\n\n        if(name == \"stock_list\"){\n            updateStockList([...stockList,value])\n        }\n    };\n\n\n    const submitGenerateSignalRequest = () => {\n        console.log(\"new executor request\", formValues);\n\n        const payload = {\n            start_time: formValues.start_date,\n            end_time: formValues.end_date,\n            interval: formValues.interval,\n            stock_symbols: stockList,\n            analysis_engine: \"simple_engine\",\n            strategy_name:formValues.strategy_name,\n            username: localStorage.getItem(\"username\"),\n            broker_name: formValues.broker_name,\n            description: formValues.remarks,\n            bucket_name: formValues.updatedStockBucketName?formValues.updatedStockBucketName:formValues.stockBucketName\n          }\n\n        axios.post(host + generateSignals, payload).then((response) => {\n            console.log(\"generate signal response\", response.data);\n            if(response.data.data.status == \"SUCCESS\"){\n                alert(\"Signal generation started\");\n            }\n            else{\n                alert(\"Signal generation Failed, Please try again later !!!\");\n            }\n           \n        }).catch((error) => alert(error));\n\n    }\n\n\n\n    const submitSaveStockBucketRequest = () => {\n        console.log(\"save stock bucket\", formValues)\n\n        const payload = {bucket_name: formValues.updatedStockBucketName, stock_symbols: stockList,description:\"Somthin i wanna write\",\n        username:localStorage.getItem(\"username\")}\n\n        axios.post(host + saveStockBucketData, payload).then((response) => {\n            console.log(\"save data response \", response.data);\n            alert(\"Stock bucket saved \" + formValues.updatedStockBucketName)\n        }).catch((error) => alert(error));\n\n    }\n\n\n    return (\n        <div>\n\n\n            <div>\n                    <Paper className=\"bg-opacity-40 p-4 h-100\">\n                        <h1 className=\"text-center font-bold text-lg\">Generate Signals</h1>\n\n\n                        <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n                            Select Stocks\n                        </Typography>\n                        {\n                        StockSelect(updateFormValue, false, \"stock_list\")\n                    }\n\n\n                        <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n                            Select Strategy\n                        </Typography>\n\n                        <Select onChange={\n                                (e) => {\n                                    updateFormValue(\"strategy_name\", e.value)\n                                    // setStrategyName(e[\"value\"]);/\n                                }\n                            }\n                            placeholder=\"Select Strategy\"\n                            isRequired={true}\n                            defaultValue={\n                                strategyList[0]\n                            }\n                            options={strategyList}/>\n\n                        <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n\n                            <Select onChange={\n                                    (e) => {\n                                        updateFormValue(\"interval\", e.value)\n                                        // setStrategyName(e[\"value\"]);/\n                                    }\n                                }\n                                placeholder=\"Select interval\"\n                                isRequired={true}\n                                defaultValue={\n                                    intervalList[0]\n                                }\n                                options={intervalList}/>\n\n                            <Select onChange={\n                                    (e) => {\n                                        updateFormValue(\"broker_name\", e.value);\n                                    }\n                                }\n                                placeholder=\"Select Broker\"\n                                isRequired={true}\n                                defaultValue={\n                                    brokersList[0]\n                                }\n                                options={brokersList}/>\n\n\n                        </div>\n\n\n                    <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n                        <TextField onChange={handleChange}\n                            name=\"start_date\"\n                            type=\"date\"\n                            value={\n                                formValues.start_date\n                            }\n                            label={\"Start Date\"}/>\n\n                        <TextField onChange={handleChange}\n                            name=\"end_date\"\n                            type=\"date\"\n                            value={\n                                formValues.end_date\n                            }\n                            label={\"End Date\"}/>\n                    </div>\n\n                    <div className=\"grid md:grid-cols-2 gap-2 mt-3\">\n\n                        <TextField onChange={handleChange}\n                            name=\"username\"\n                            multiline=\"false\"\n                            type=\"textarea\"\n                            value={\n                                formValues.username\n                            }\n                            label={\" username \"}/>\n\n\n                        <TextField onChange={handleChange}\n                            name=\"remarks\"\n                            multiline=\"true\"\n                            type=\"textarea\"\n                            value={\n                                formValues.remarks\n                            }\n                            label={\" remarks \"}/>\n\n\n                    </div>\n                    <div className=\"grid grid-col-1 grid-flow-col m-3 align-bottom\">\n                        <Button className=' bg-green-100' type=\"submit\" onClick={submitGenerateSignalRequest}>\n                            Submit\n                        </Button>\n\n                    </div>\n\n                </Paper>\n          \n        </div>\n\n\n        <div className='mt-2'>\n\n                <Paper className=\"bg-opacity-40 p-4 h-100\">\n\n                    <h1 className=\"text-center font-bold text-lg\">Stock Bucket</h1>\n\n\n                    <Typography variant=\"h7\" className=\"text-center text-gray-500 text-bold\">\n                        Select Stock Bucket\n                    </Typography>\n                    {\n                    StockBucketSelect(updateFormValue, false, \"stockBucketName\")\n                }\n\n                    <TextField onChange={handleChange}\n                        name=\"updatedStockBucketName\"\n                        multiline=\"false\"\n                        type=\"textarea\"\n                        value={\n                            formValues.updatedStockBucketName\n                        }\n                        label={\" stockBucketName \"}/>\n\n\n                    <Button className=' bg-green-100 btn btn-primary align-left' type=\"submit\" onClick={submitSaveStockBucketRequest}>\n                        Save Bucket\n                    </Button>\n                </Paper>\n            \n        </div>\n\n    </div>\n    )\n}\n\nexport default GenerateSignalsPanel;\n","import React, { useState } from 'react';\nimport ShowSelectedStocks from './ShowSelectedStocks';\nimport GenerateSignalsPanel from './GenerateSignalsPanel';\n\nconst GenerateSignals = () => {\n  const [stockList, setStockList] = useState([]);\n\n   const[stockBucketName,setStockBucketName] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-row  \">\n      <div className=\"flex-grow bg-white bg-opacity-75 rounded-lg shadow-lg mx-4 my-2 p-4\">\n        <ShowSelectedStocks stockList={stockList} updateStockList={setStockList} stockListName={stockBucketName} />\n      </div>\n\n      <div className=\"flex-shrink bg-white bg-opacity-75 rounded-lg shadow-lg mx-4 my-2 p-4\">\n        <GenerateSignalsPanel updateStockList={setStockList} updateStockBucketName={setStockBucketName} stockList={stockList} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenerateSignals;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './TradeDetails.css';\nimport ReactModal from 'react-modal';\nimport {\n  host,\n  getSignalData,\n  getSignalSummaryReport\n} from \"../../configs.json\";\nimport MuiTable from '../../utils/MuiTable';\nimport { getColumns, extractTradeSingals } from \"../../utils/utils.js\";\n\nconst TradeDetails = ({ signal, isOpen, onRequestClose, isSummary}) => {\n  const [tradeData, setTradeData] = useState([]);\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    fetchTradeData(isSummary);\n  }, []);\n\n  const fetchTradeData = async (isSummary) => {\n    try {\n      let response;\n      var cols ;\n      if(isSummary){\n        response =  await axios.get(host + getSignalSummaryReport, { params: { request: signal.signal_id } });\n        console.log(\"fetchTradeData summary active \",response);\n\n      setData(response.data);\n      cols = getColumns(response.data);\n      }else{\n        response = await axios.get(host + getSignalData, { params: { request: signal.signal_id } });\n\n      setData(extractTradeSingals(response.data.report));\n       cols = getColumns(extractTradeSingals(response.data.report));\n      }\n      \n      setTradeData(response.data);\n      // console.log(\"response trade data\", extractTradeSingals(response.data.report));\n\n      setColumns(cols);\n      console.log(\"column \", cols);\n    } catch (error) {\n      console.error('Error fetching trade details:', error);\n    }\n  };\n\n  const notFound = <div className=\"loading\">Loading data</div>;\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel=\"Trade Details\"\n      className=\"trade-details-modal\"\n      overlayClassName=\"modal-overlay\"\n    >\n      {/* Set z-index for the modal header */}\n      <div className=\"modal-header\" >\n        <h2>Trade Details</h2>\n        <button onClick={onRequestClose} className=\"cut-button\">\n          &#10005;\n        </button>\n      </div>\n      {data && columns ? MuiTable(`Signal id ${signal.signal_id}`, data, columns,{zIndex:10}) : notFound}\n    </ReactModal>\n  );\n  \n};\n\nexport default TradeDetails;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TradeDetails from './TradeDetails';\nimport './SignalsDashboard.css';\nimport ReactModal from 'react-modal';\nimport { getColumns, extractTradeSingals } from \"../../utils/utils.js\";\n\n\nimport { Button } from \"@material-ui/core\";\nimport MuiTable from '../../utils/MuiTable';\n\nimport { host, getAllSignalList, deleteSignalData } from '../../configs.json';\n\nReactModal.setAppElement('#root');\n\nconst handleDeleteSignal = async (signalId, username) => {\n  try {\n    const response = await axios.post(host + deleteSignalData, {\n      signal_id: signalId,\n      username: username,\n      broker_name: 'PAPER_TRADING',\n    });\n    // Handle the response as needed\n    console.log('Signal deleted:', response.data);\n    // Optionally, you can also fetch updated trade signals after deleting the bucket\n    // fetchTradeSignals();\n    // window.location.reload();\n  } catch (error) {\n    console.error('Error deleting Signal:', error);\n  }\n};\n\nconst SignalsDashboard = () => {\n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [selectedSignal, setSelectedSignal] = useState(null);\n  const [isSummary, setIsSummary] = useState(null);\n  const [columns, setColumns] = useState([]);\n\n\n  useEffect(() => {\n    fetchTradeSignals();\n  }, []);\n\n  const fetchTradeSignals = async () => {\n    try {\n      const response = await axios.get(host + getAllSignalList); // Replace with your API endpoint\n      setTradeSignals(response.data);\n      console.log(\"Trade signals dasbhboard data \",response.data)\n      var cols = getColumns(response.data);\n      cols.push(...additionalColumn);\n      setColumns(cols);\n      \n    } catch (error) {\n      console.error('Error fetching trade signals:', error);\n    }\n  };\n  // import { Button } from \"@material-ui/core\";\n\n  const renderButton = (params, isSummary) => {\n    const color = isSummary ? \"#c5aa20\" : \"primary\";\n    const label = isSummary ? \"Summary\" : \"Report\";\n  \n    return (\n      <Button\n        variant=\"contained\"\n        color={color}\n        onClick={(e) => {\n          e.stopPropagation();\n          handleSignalClick(params, isSummary);\n        }}\n      >\n        {label}\n      </Button>\n    );\n  };\n  \n  const handleSignalClick = (signal, isSummaryFlag) => {\n    setSelectedSignal(signal);\n    setIsSummary(isSummaryFlag);\n  };\n  \n  const handleModalClose = () => {\n    setSelectedSignal(null);\n    setIsSummary(null);\n  };\n  \n  const notFound = <div className=\"loading\">Loading data</div>;\n  \n  const renderDeleteButton = (params) => {\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={(e) => {\n          e.stopPropagation();\n          handleDeleteSignal(params.signal_id, localStorage.getItem(\"username\"));\n        }}\n      >\n        Delete\n      </Button>\n    );\n  };\n  \n  const renderSummaryButton = (params) => {\n    return renderButton(params, true);\n  };\n  \n  const renderReportButton = (params) => {\n    return renderButton(params, false);\n  };\n  \n\n  const additionalColumn = [\n    {\n      title: 'Report', field: 'detailedReport',\n      render: renderReportButton,\n      disableClickEventBubbling: true,\n    },{\n    title: 'Summary', field: 'summaryReport',\n    render: renderSummaryButton,\n    disableClickEventBubbling: true,\n  },{\n    title: 'Delete', field: 'deactivate',\n    render: renderDeleteButton,\n    disableClickEventBubbling: true,\n  }] \n\n\n\n  return (\n    <div className='signals-dashboard'>\n    {tradeSignals && columns ? MuiTable('Trade Signals', tradeSignals, columns) : notFound}\n\n      {selectedSignal && (\n        <TradeDetails signal={selectedSignal} isOpen={true} onRequestClose={handleModalClose} isSummary ={isSummary} />\n      )}\n    </div>\n  );\n};\n\nexport default SignalsDashboard;\n","import \"./App.css\";\nimport React from \"react\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Algotrading from \"./Components/Algotrading/Algotrading\";\nimport SideBar  from \"./Components/Sidebar/SideBar\";\nimport Ranking from \"./Components/Ranking/Ranking\";\nimport ExecutorControlPanel from \"./Components/Executor/ExecutorControlPanel\";\nimport StrategyDashboard from \"./Components/Strategy/StrategyDashboard\";\nimport UserDashboard from \"./Components/User/UserDashboard\";\nimport GenerateSignals from \"./Components/Signal/GenerateSignals\";\nimport SignalsDashboard from \"./Components/Signal/SignalsDashboard\";\nexport default function App() {\n\n    return (\n      <div className=\"flex-row row bg-gray-700 min-h-screen\">\n        <BrowserRouter>\n          <SideBar />\n          <div className=\"resize-x ml-16 p-1 \">\n            <Routes>\n              <Route path=\"/\" element={<Algotrading />} />\n              <Route path=\"/ranking\" element={<Ranking />} />\n              <Route path=\"/executor_cp\" element={<ExecutorControlPanel />} />\n              <Route path=\"/strategy_dashboard\" element={<StrategyDashboard />} />\n              <Route path=\"/user\" element={<UserDashboard />} />\n              <Route path=\"/generate_signals\" element={<GenerateSignals />} />\n              <Route path=\"/signals_dashboard\" element={<SignalsDashboard />} />\n  \n            </Routes>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}